{"version":3,"sources":["component/Layout/Header.jsx","component/itemTodos.jsx","component/todos.jsx","component/AddTodos.jsx","component/pages/About.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","state","style","headerStyle","to","headerStyley","Component","background","color","textAlign","padding","textDecoration","TodoItem","getStyle","borderBottom","props","todo","completed","this","id","title","type","onChange","markComplete","bind","btnStyle","onClick","delTodo","backgroundColor","border","borderRadius","cursor","float","Todos","todos","map","key","AddTodos","onSubmit","e","preventDefault","addTodo","setState","target","name","value","display","flex","placeholder","className","aria-hidden","About","Fragment","App","axios","delete","then","res","filter","post","data","get","exact","path","render","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"8OAEMA,E,4MACFC,MAAQ,G,uDAEJ,OACA,4BAAQC,MAAOC,GACX,6CACA,kBAAC,IAAD,CAAOD,MAAOC,EAAaC,GAAG,KAA9B,QAFJ,KAGI,kBAAC,IAAD,CAAMF,MAAOG,EAAcD,GAAG,UAA9B,SAHJ,S,GAJaE,aAafH,EAAc,CACpBI,WAAY,UACZC,MAAO,UACPC,UAAW,SACXC,QAAS,MACTC,eAAgB,QAEVN,EAAe,CACrBG,MAAO,UACPG,eAAgB,QAYDX,ICjCLY,E,4MAGNC,SAAW,WACP,MAAO,CACNN,WAAY,UACbG,QAAS,OACTI,aAAc,kBACdH,eAAgB,EAAKI,MAAMC,KAAKC,UAChC,eAAiB,S,EAKjBhB,MAAQ,G,uDACE,IAAD,EACeiB,KAAKH,MAAMC,KAAxBG,EADF,EACEA,GAAIC,EADN,EACMA,MACX,OAEA,yBAAKlB,MAAOgB,KAAKL,YACb,2BACE,2BAAOQ,KAAK,WAAWC,SAAUJ,KAAKH,MAAMQ,aAAaC,KACtDN,KAAMC,KAFX,IAEoB,IACdC,EACF,4BAAQlB,MAAOuB,EACfC,QAASR,KAAKH,MAAMY,QAAQH,KAAKN,KAAMC,IADvC,W,GAxBOb,aA0CrBmB,EAAW,CACjBG,gBAAiB,UACjBpB,MAAO,UACPqB,OAAQ,OACRnB,QAAS,UACToB,aAAc,MACdC,OAAQ,UACRC,MAAO,UAGYpB,ICxBJqB,E,uKAxBD,IAAD,OACL,OAAOf,KAAKH,MAAMmB,MAAMC,KAAI,SAACnB,GAAD,OAExB,kBAAC,EAAD,CAAUoB,IAAKpB,EAAKG,GAAIH,KAAMA,EAAMO,aAAc,EAAKR,MAAMQ,aAC7DI,QAAS,EAAKZ,MAAMY,iB,GAPZrB,a,QCqCL+B,G,kNApCXpC,MAAQ,CACJmB,MAAO,I,EAGVkB,SAAW,SAACC,GACRA,EAAEC,iBACF,EAAKzB,MAAM0B,QAAQ,EAAKxC,MAAMmB,OAC9B,EAAKsB,SAAS,CAAEtB,MAAO,M,EAE3BE,SAAW,SAACiB,GAAD,OAAO,EAAKG,SAAL,eAAiBH,EAAEI,OAAOC,KAAOL,EAAEI,OAAOE,S,uDAEzD,OACC,0BAAMP,SAAUpB,KAAKoB,SAAUpC,MAAO,CAAE4C,QAAS,SAC/C,2BACAzB,KAAK,OACLuB,KAAK,QACL1C,MAAO,CAAE6C,KAAM,KAAMrC,QAAS,OAC9BsC,YAAY,eACZH,MAAO3B,KAAKjB,MAAMmB,MAClBE,SAAUJ,KAAKI,WAEd,4BAAQD,KAAK,SAAS4B,UAAU,mBAChC,uBAAGA,UAAU,aAAaC,cAAY,e,GAvB3B5C,cCgBR6C,E,4MAjBXlD,MAAQ,G,uDAEJ,OACA,kBAAC,IAAMmD,SAAP,KAEL,qCACA,uD,GAPkB9C,a,iBCgFN+C,E,4MAxEbpD,MAAQ,CACNiC,MAAO,I,EAUPX,aAAe,SAACJ,GAEd,EAAKuB,SAAS,CAAER,MAAO,EAAKjC,MAAMiC,MAAMC,KAAI,SAAAnB,GAK3C,OAJGA,EAAKG,KAAOA,IACbH,EAAKC,WAAYD,EAAKC,WAGjBD,Q,EAOZW,QAAU,SAACR,GACTmC,IAAMC,OAAN,qDAA2DpC,IACxDqC,MAAK,SAAAC,GAAG,OAAI,EAAKf,SAAS,CAAER,MAAM,YAAK,EAAKjC,MAAMiC,MAAMwB,QAAO,SAAA1C,GAAI,OAAIA,EAAKG,KACvEA,Y,EAKVsB,QAAU,SAACrB,GACTkC,IAAMK,KAAK,6CAA8C,CACzDvC,QACAH,WAAW,IAEVuC,MAAK,SAAAC,GAAG,OAAI,EAAKf,SAAS,CAAER,MAAM,GAAD,mBAAM,EAAKjC,MAAMiC,OAAjB,CAAwBuB,EAAIG,a,kEAjC5C,IAAD,OACdN,IAAMO,IAAI,uDACJL,MAAK,SAAAC,GAAG,OAAI,EAAKf,SAAS,CAAER,MAAOuB,EAAIG,Y,+BAmCxC,IAAD,OAEP,OACE,kBAAC,IAAD,KAEA,yBAAKX,UAAU,OACf,yBAAKA,UAAU,aACb,kBAAC,EAAD,MAEJ,kBAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,IAAIC,OAAQ,SAAAjD,GAAK,OAC7B,kBAAC,IAAMqC,SAAP,KACF,kBAAC,EAAD,CAAUX,QAAS,EAAKA,UACxB,kBAAC,EAAD,CAAOP,MAAO,EAAKjC,MAAMiC,MACzBX,aAAc,EAAKA,aACnBI,QAAS,EAAKA,cAOhB,kBAAC,IAAD,CAAOoC,KAAK,SAASE,UAAWd,W,GAhEpB7C,aCGZ4D,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTjB,MAAK,SAAAsB,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB/E,QACf0E,UAAUC,cAAcO,YAI1BC,QAAQC,IACN,iHAKEX,GAAUA,EAAOY,UACnBZ,EAAOY,SAASR,KAMlBM,QAAQC,IAAI,sCAGRX,GAAUA,EAAOa,WACnBb,EAAOa,UAAUT,WAO5BU,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,MC1FjEC,IAAS1B,OACP,kBAAC,EAAD,MACA2B,SAASC,eAAe,SDcnB,SAAkBlB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIkB,IAAIC,GAAwB1B,OAAOC,SAAS0B,MACpDC,SAAW5B,OAAOC,SAAS2B,OAIvC,OAGF5B,OAAO6B,iBAAiB,QAAQ,WAC9B,IAAMxB,EAAK,UAAMqB,GAAN,sBAEP5B,IAgEV,SAAiCO,EAAOC,GAEtCwB,MAAMzB,EAAO,CACX0B,QAAS,CAAE,iBAAkB,YAE5B3C,MAAK,SAAA4C,GAEJ,IAAMC,EAAcD,EAASD,QAAQtC,IAAI,gBAEnB,MAApBuC,EAASE,QACO,MAAfD,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5C5B,UAAUC,cAAc4B,MAAMhD,MAAK,SAAAsB,GACjCA,EAAa2B,aAAajD,MAAK,WAC7BY,OAAOC,SAASqC,eAKpBlC,EAAgBC,EAAOC,MAG1Bc,OAAM,WACLJ,QAAQC,IACN,oEAvFAsB,CAAwBlC,EAAOC,GAI/BC,UAAUC,cAAc4B,MAAMhD,MAAK,WACjC4B,QAAQC,IACN,iHAMJb,EAAgBC,EAAOC,OCpC/BE,K","file":"static/js/main.66652e65.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nclass Header extends Component {\r\n    state = {  }\r\n    render() { \r\n        return (\r\n        <header style={headerStyle}>\r\n            <h1>React-TodoApp</h1>\r\n            <Link  style={headerStyle} to=\"/\">Home</Link> |\r\n            <Link style={headerStyley} to=\"/about\">About</Link>|\r\n        \r\n          \r\n        </header> );\r\n    }\r\n}\r\nconst headerStyle = {\r\nbackground: '#5ED2F2',\r\ncolor: '#ffffff',\r\ntextAlign: 'center',\r\npadding: '5px',\r\ntextDecoration: 'none'\r\n}\r\nconst headerStyley = {\r\ncolor: '#ffffff',\r\ntextDecoration: 'none'\r\n\r\n}\r\nconst linkStyle = {\r\n\r\n    color: '#fff',\r\n    textDecoration: 'none'\r\n}\r\n\r\n\r\n \r\n\r\nexport default Header;","    import React, { Component } from 'react';\r\n    import PropTypes from 'prop-types';\r\n\r\n    class TodoItem extends Component {\r\n\r\n        \r\n    getStyle = () => {\r\n        return {\r\n         background: '#f4f4f4',\r\n        padding: '10px',\r\n        borderBottom: '1px #ccc dotted',\r\n        textDecoration: this.props.todo.completed? \r\n        'line-through' : 'none'\r\n       \r\n        }\r\n    }\r\n    \r\n        state = {  }\r\n        render() { \r\n            const {id, title} = this.props.todo;\r\n            return ( \r\n              \r\n            <div style={this.getStyle()}>\r\n                <p>\r\n                  <input type=\"checkbox\" onChange={this.props.markComplete.bind\r\n                    (this, id)} /> {' '} \r\n                    { title } \r\n                    <button style={btnStyle}\r\n                    onClick={this.props.delTodo.bind(this, id)}\r\n                    >x</button>\r\n                </p>\r\n            </div> );\r\n        }\r\n    }\r\n    \r\n\r\n    // propTypes\r\n    TodoItem.propTypes = {\r\n\r\n        todo: PropTypes.object.isRequired,\r\n        markComplete: PropTypes.func.isRequired,\r\n        delTodo : PropTypes.func.isRequired,\r\n  \r\n    }\r\n   \r\nconst btnStyle = {\r\nbackgroundColor: '#ff0000',\r\ncolor: '#ffffff',\r\nborder: 'none',\r\npadding: '5px 9px',\r\nborderRadius: '50%',\r\ncursor: 'pointer',\r\nfloat: 'right '\r\n\r\n}\r\n    export default TodoItem;\r\n","import React, { Component } from 'react';\r\nimport TodoItem from './itemTodos';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Todos extends Component {\r\n\r\n   \r\n    render() { \r\n        return this.props.todos.map((todo) =>(\r\n        \r\n            <TodoItem key={todo.id} todo={todo} markComplete={this.props.markComplete} \r\n            delTodo={this.props.delTodo} /> \r\n\r\n        \r\n        )); \r\n           \r\n        \r\n    }\r\n\r\n}\r\n\r\n// propTypes\r\nTodos.propTypes = {\r\n\r\n    todos: PropTypes.array.isRequired,\r\n    markComplete: PropTypes.func.isRequired,\r\n    delTodo : PropTypes.func.isRequired,\r\n  \r\n}\r\n\r\n \r\nexport default Todos;","import React, { Component } from 'react';\r\n//import PropTypes from 'prop-types';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\nclass AddTodos extends Component {\r\n    state = { \r\n        title: ''\r\n\r\n     } \r\n     onSubmit = (e) => {\r\n         e.preventDefault();\r\n         this.props.addTodo(this.state.title);\r\n         this.setState({ title: ''});\r\n     }\r\n     onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n    render() { \r\n        return ( \r\n         <form onSubmit={this.onSubmit} style={{ display: 'flex' }}>\r\n           <input \r\n           type=\"text\"\r\n           name=\"title\"\r\n           style={{ flex: '10', padding: '5px'}}\r\n           placeholder=\"Add Todo ...\"\r\n           value={this.state.title}\r\n           onChange={this.onChange}\r\n            />\r\n            <button type=\"submit\" className=\"btn btn-success\">\r\n            <i className=\"fa fa-plus\" aria-hidden=\"true\"></i>\r\n\r\n    </button>\r\n            \r\n\r\n            \r\n\r\n         </form>\r\n\r\n         );\r\n    }\r\n}\r\n\r\n\r\nexport default AddTodos;","import React, { Component } from 'react';\r\n\r\nclass About  extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n        <React.Fragment>\r\n\r\n   <h1>About</h1>\r\n   <p>TodoList app v1.0.0</p>\r\n\r\n        </React.Fragment>\r\n\r\n\r\n\r\n\r\n         );\r\n    }\r\n}\r\n \r\nexport default About ;","import React, { Component } from 'react';\nimport{ BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './component/Layout/Header';\nimport Todos from './component/todos'; \nimport AddTodos from './component/AddTodos';\nimport About from './component/pages/About';\n//import uuid from 'uuid';\nimport axios from 'axios';\n\nclass App extends Component {\n  state = { \n    todos: []\n\n  }\n\n  componentDidMount(){\n       axios.get('https://jsonplaceholder.typicode.com/todos?_limit=4')\n            .then(res => this.setState({ todos: res.data}))   \n\n  }\n// Toggle Handler Completed\n    markComplete = (id) =>{\n    \n      this.setState({ todos: this.state.todos.map(todo =>    {                   \n       if(todo.id === id){\n         todo.completed =!todo.completed\n\n       }\n       return todo;\n\n       })  })\n\n\n  }   \n//Delete tod o handler\n  delTodo = (id) => {\n    axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n      .then(res => this.setState({ todos: [...this.state.todos.filter(todo => todo.id \n        !== id)] }))\n\n\n  }\n  //Add Todo\n  addTodo = (title) => {\n    axios.post('https://jsonplaceholder.typicode.com/todos', {\n    title,\n    completed: false\n    })\n    .then(res => this.setState({ todos: [...this.state.todos, res.data  ] }));\n   \n  }\n   \n  render() { \n  \n    return ( \n      <Router>\n      \n      <div className=\"App\">\n      <div className=\"container\">\n        <Header />\n        \n    <Route exact path=\"/\" render={props => (\n          <React.Fragment>\n        <AddTodos addTodo={this.addTodo} />  \n        <Todos todos={this.state.todos} \n        markComplete={this.markComplete} \n        delTodo={this.delTodo} />\n\n     \n        </React.Fragment>\n\n        )} />\n       \n      <Route path=\"/about\" component={About} />\n    </div>\n    \n    </div>\n    </Router>\n     );\n  }\n}\n \nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}